"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertV2Annotations = void 0;
function convertV2Annotations(attributes, objectType, objectName) {
    const annotations = [];
    if (attributes["sap:schema-version"]) {
        annotations.push({
            term: "Org.OData.Core.V1.SchemaVersion" /* SchemaVersion */,
            value: {
                type: "String",
                String: attributes["sap:schema-version"]
            }
        });
    }
    if (attributes["sap:creatable"] && objectType === "EntitySet") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.InsertRestrictions" /* InsertRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "Insertable",
                        value: {
                            type: "Bool",
                            Bool: attributes["sap:creatable"] === "true"
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:creatable"] && objectType === "NavigationProperty") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.NavigationRestrictions" /* NavigationRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "RestrictedProperties",
                        value: {
                            type: "Record",
                            Record: {
                                propertyValues: [
                                    {
                                        name: "InsertRestrictrions",
                                        value: {
                                            type: "Record",
                                            Record: {
                                                propertyValues: [
                                                    {
                                                        name: "Insertable",
                                                        value: {
                                                            type: "Bool",
                                                            Bool: attributes["sap:creatable"] === "true"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:creatable-path"] && objectType === "NavigationProperty") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.NavigationRestrictions" /* NavigationRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "RestrictedProperties",
                        value: {
                            type: "Record",
                            Record: {
                                propertyValues: [
                                    {
                                        name: "InsertRestrictrions",
                                        value: {
                                            type: "Record",
                                            Record: {
                                                propertyValues: [
                                                    {
                                                        name: "Insertable",
                                                        value: {
                                                            type: "Path",
                                                            Path: attributes["sap:creatable-path"]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:updatable"] && objectType === "EntitySet") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.UpdateRestrictions" /* UpdateRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "Updatable",
                        value: {
                            type: "Bool",
                            Bool: attributes["sap:updatable"] === "true"
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:updatable-path"] && objectType === "EntitySet") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.UpdateRestrictions" /* UpdateRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "Updatable",
                        value: {
                            type: "Path",
                            Path: attributes["sap:updatable-path"]
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:deletable"] && objectType === "EntitySet") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.DeleteRestrictions" /* DeleteRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "Deletable",
                        value: {
                            type: "Bool",
                            Bool: attributes["sap:updatable"] === "true"
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:deletable-path"] && objectType === "EntitySet") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.DeleteRestrictions" /* DeleteRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "Deletable",
                        value: {
                            type: "Path",
                            Path: attributes["sap:deletable-path"]
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:creatable"] === "true" &&
        attributes["sap:updatable"] === "false" &&
        objectType === "Property") {
        annotations.push({
            term: "Org.OData.Core.V1.Immutable" /* Immutable */,
            value: {
                type: "Bool",
                Bool: true
            }
        });
    }
    if (attributes["sap:creatable"] === "false" &&
        attributes["sap:updatable"] === "false" &&
        objectType === "Property") {
        annotations.push({
            term: "Org.OData.Core.V1.Computed" /* Computed */,
            value: {
                type: "Bool",
                Bool: true
            }
        });
    }
    if (attributes["sap:updatable-path"] && objectType === "Property") {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.FieldControl" /* FieldControl */,
            value: {
                type: "Path",
                Path: attributes["sap:updatable-path"]
            }
        });
    }
    if (attributes["sap:searchable"]) {
        annotations.push({
            term: "Org.OData.Capabilities.V1.SearchRestrictions" /* SearchRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "Searachable",
                        value: {
                            type: "Bool",
                            Bool: attributes["sap:searchable"] === "true"
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:pageable"]) {
        annotations.push({
            term: "Org.OData.Capabilities.V1.TopSupported" /* TopSupported */,
            value: {
                type: "Bool",
                Bool: attributes["sap:pageable"] === "true"
            }
        });
        annotations.push({
            term: "Org.OData.Capabilities.V1.SkipSupported" /* SkipSupported */,
            value: {
                type: "Bool",
                Bool: attributes["sap:pageable"] === "true"
            }
        });
    }
    if (attributes["sap:topable"]) {
        annotations.push({
            term: "Org.OData.Capabilities.V1.TopSupported" /* TopSupported */,
            value: {
                type: "Bool",
                Bool: attributes["sap:topable"] === "true"
            }
        });
    }
    if (attributes["sap:requires-filter"]) {
        annotations.push({
            term: "Org.OData.Capabilities.V1.FilterRestrictions" /* FilterRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "RequiresFilter",
                        value: {
                            type: "Bool",
                            Bool: attributes["sap:requires-filter"] === "true"
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:required-in-filter"]) {
        annotations.push({
            term: "Org.OData.Capabilities.V1.FilterRestrictions" /* FilterRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "RequiredProperties",
                        value: {
                            type: "Collection",
                            Collection: [
                                {
                                    type: "PropertyPath",
                                    PropertyPath: objectName
                                }
                            ]
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:filterable"] === "false" && objectType === "Property") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.FilterRestrictions" /* FilterRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "NonFilterableProperties",
                        value: {
                            type: "Collection",
                            Collection: [
                                {
                                    type: "PropertyPath",
                                    PropertyPath: objectName
                                }
                            ]
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:filterable"] === "false" && objectType === "NavigationProperty") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.NavigationRestrictions" /* NavigationRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "RestrictedProperties",
                        value: {
                            type: "Collection",
                            Collection: [
                                {
                                    type: "Record",
                                    propertyValues: [
                                        {
                                            name: "NavigationProperty",
                                            value: {
                                                type: "NavigationPropertyPath",
                                                NavigationPropertyPath: objectName
                                            }
                                        },
                                        {
                                            name: "FilterRestrictions",
                                            value: {
                                                type: "Record",
                                                Record: {
                                                    propertyValues: [
                                                        {
                                                            name: "Filterable",
                                                            value: {
                                                                type: "Bool",
                                                                Bool: false
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:filter-restricton"]) {
        annotations.push({
            term: "Org.OData.Capabilities.V1.FilterRestrictions" /* FilterRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "FilterExpressionRestrictions",
                        value: {
                            type: "Collection",
                            Collection: [
                                {
                                    type: "Record",
                                    propertyValues: [
                                        {
                                            name: "FilterExpressionRestrictions",
                                            value: {
                                                type: "String",
                                                String: attributes["sap:filter-restricton"]
                                            }
                                        },
                                        {
                                            name: "Property",
                                            value: {
                                                type: "PropertyPath",
                                                PropertyPath: objectName
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:sortable"] === "false") {
        annotations.push({
            term: "Org.OData.Capabilities.V1.SortRestrictions" /* SortRestrictions */,
            record: {
                propertyValues: [
                    {
                        name: "NonSortableProperties",
                        value: {
                            type: "PropertyPath",
                            PropertyPath: objectName
                        }
                    }
                ]
            }
        });
    }
    if (attributes["sap:visible"] === "false") {
        annotations.push({
            term: "com.sap.vocabularies.UI.v1.Hidden" /* Hidden */,
            value: {
                type: "Bool",
                Bool: true
            }
        });
    }
    if (attributes["sap:label"]) {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.Label" /* Label */,
            value: {
                type: "String",
                String: attributes["sap:label"]
            }
        });
    }
    if (attributes["sap:heading"]) {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.Heading" /* Heading */,
            value: {
                type: "String",
                String: attributes["sap:heading"]
            }
        });
    }
    if (attributes["sap:quickinfo"]) {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.QuickInfo" /* QuickInfo */,
            value: {
                type: "String",
                String: attributes["sap:quickinfo"]
            }
        });
    }
    if (attributes["sap:text"]) {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.Text" /* Text */,
            value: {
                type: "Path",
                Path: attributes["sap:text"]
            }
        });
    }
    if (attributes["sap:unit"]) {
        annotations.push({
            term: "Org.OData.Measures.V1.Unit" /* Unit */,
            value: {
                type: "Path",
                Path: attributes["sap:unit"]
            }
        });
        annotations.push({
            term: "Org.OData.Measures.V1.ISOCurrency" /* ISOCurrency */,
            value: {
                type: "Path",
                Path: attributes["sap:unit"]
            }
        });
    }
    if (attributes["sap:precision"]) {
        annotations.push({
            term: "Org.OData.Measures.V1.Scale" /* Scale */,
            value: {
                type: "Int",
                Int: parseInt(attributes["sap:precision"])
            }
        });
    }
    if (attributes["sap:value-list"] === "fixed-value") {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.ValueListWithFixedValues" /* ValueListWithFixedValues */,
            value: {
                type: "Bool",
                Bool: true
            }
        });
    }
    if (attributes["sap:display-format"] === "NonNegative") {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.IsDigitSequence" /* IsDigitSequence */,
            value: {
                type: "Bool",
                Bool: true
            }
        });
    }
    if (attributes["sap:display-format"] === "UpperCase") {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.IsUpperCase" /* IsUpperCase */,
            value: {
                type: "Bool",
                Bool: true
            }
        });
    }
    if (attributes["sap:lower-boundary"] || attributes["sap:upper-boundary"]) {
        const pv = [];
        if (attributes["sap:lower-boundary"]) {
            pv.push({
                name: "LowerBoundary",
                value: {
                    type: "PropertyPath",
                    PropertyPath: attributes["sap:lower-boundary"]
                }
            });
        }
        if (attributes["sap:upper-boundary"]) {
            pv.push({
                name: "UpperBoundary",
                value: {
                    type: "PropertyPath",
                    PropertyPath: attributes["sap:upper-boundary"]
                }
            });
        }
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.Interval" /* Interval */,
            record: {
                propertyValues: pv
            }
        });
    }
    if (attributes["sap:field-control"]) {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.FieldControl" /* FieldControl */,
            value: {
                type: "Path",
                Path: attributes["sap:field-control"]
            }
        });
    }
    if (attributes["sap:applicable-path"]) {
        annotations.push({
            term: "Org.OData.Core.V1.OperationAvailable" /* OperationAvailable */,
            value: {
                type: "Path",
                Path: attributes["sap:applicable-path"]
            }
        });
    }
    if (attributes["sap:minoccurs"]) {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.MinOccurs" /* MinOccurs */,
            value: {
                type: "Int",
                Int: parseInt(attributes["sap:minoccurs"])
            }
        });
    }
    if (attributes["sap:maxoccurs"]) {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.MaxOccurs" /* MaxOccurs */,
            value: {
                type: "Int",
                Int: parseInt(attributes["sap:maxoccurs"])
            }
        });
    }
    if (attributes["sap:parameter"] === "mandatory") {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.FieldControl" /* FieldControl */,
            value: {
                type: "EnumMember",
                EnumMember: "Common.FieldControlType/Mandatory" /* Mandatory */
            }
        });
    }
    if (attributes["sap:parameter"] === "optional") {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.FieldControl" /* FieldControl */,
            value: {
                type: "EnumMember",
                EnumMember: "Common.FieldControlType/Optional" /* Optional */
            }
        });
    }
    if (attributes["sap:attribute-for"]) {
        annotations.push({
            term: "com.sap.vocabularies.Common.v1.Attributes" /* Attributes */,
            value: {
                type: "Collection",
                Collection: [
                    {
                        type: "PropertyPath",
                        PropertyPath: objectName
                    }
                ]
            }
        });
    }
    return annotations;
}
exports.convertV2Annotations = convertV2Annotations;
