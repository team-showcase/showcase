import * as com_sap_vocabularies_Communication_v1 from "./Communication";

// Type containing all possible annotations to use for EntityContainer
export interface EntityContainerAnnotations_Communication {}

// Type containing all possible annotations to use for Schema
export interface SchemaAnnotations_Communication {}

// Type containing all possible annotations to use for Reference
export interface ReferenceAnnotations_Communication {}

// Type containing all possible annotations to use for EntityType
export interface EntityTypeAnnotations_Communication {
	"Contact"?: com_sap_vocabularies_Communication_v1.Contact;
	"Address"?: com_sap_vocabularies_Communication_v1.Address;
	"Event"?: com_sap_vocabularies_Communication_v1.Event;
	"Task"?: com_sap_vocabularies_Communication_v1.Task;
	"Message"?: com_sap_vocabularies_Communication_v1.Message;
}

// Type containing all possible annotations to use for EnumType
export interface EnumTypeAnnotations_Communication {}

// Type containing all possible annotations to use for ComplexType
export interface ComplexTypeAnnotations_Communication {}

// Type containing all possible annotations to use for Property
export interface PropertyAnnotations_Communication {
	"IsEmailAddress"?: com_sap_vocabularies_Communication_v1.IsEmailAddress;
	"IsPhoneNumber"?: com_sap_vocabularies_Communication_v1.IsPhoneNumber;
}

// Type containing all possible annotations to use for NavigationProperty
export interface NavigationPropertyAnnotations_Communication {}

// Type containing all possible annotations to use for TypeDefinition
export interface TypeDefinitionAnnotations_Communication {}

// Type containing all possible annotations to use for Term
export interface TermAnnotations_Communication {}

// Type containing all possible annotations to use for Parameter
export interface ParameterAnnotations_Communication {}

// Type containing all possible annotations to use for ReturnType
export interface ReturnTypeAnnotations_Communication {}

// Type containing all possible annotations to use for EntitySet
export interface EntitySetAnnotations_Communication {}

// Type containing all possible annotations to use for Singleton
export interface SingletonAnnotations_Communication {}

// Type containing all possible annotations to use for ActionImport
export interface ActionImportAnnotations_Communication {}

// Type containing all possible annotations to use for FunctionImport
export interface FunctionImportAnnotations_Communication {}

// Type containing all possible annotations to use for Action
export interface ActionAnnotations_Communication {}

// Type containing all possible annotations to use for Function
export interface FunctionAnnotations_Communication {}

// Type containing all possible annotations to use for Include
export interface IncludeAnnotations_Communication {}

// Type containing all possible annotations to use for Annotation
export interface AnnotationAnnotations_Communication {}

// Type containing all possible annotations to use for Collection
export interface CollectionAnnotations_Communication {}

// Type containing all possible annotations to use for Record
export interface RecordAnnotations_Communication {}

// Type containing all possible annotations to use for PropertyValue
export interface PropertyValueAnnotations_Communication {}
