import * as Core from "./Core";
import * as Validation from "./Validation";
import * as Edm from "../Edm";
import AnnotationTerm = Edm.AnnotationTerm;
import PropertyAnnotationValue = Edm.PropertyAnnotationValue;
import EnumValue = Edm.EnumValue;
import ComplexType = Edm.ComplexType;

// Term
/**
  The currency for this monetary amount as an ISO 4217 currency code
*/
export type ISOCurrency = AnnotationTerm<PropertyAnnotationValue<Edm.String>>;

// Term
/**
  The number of significant decimal places in the scale part (less than or equal to the number declared in the Scale facet)
*/
export type Scale = AnnotationTerm<Edm.Byte>;

// Term
/**
  The unit of measure for this measured quantity, e.g. cm for centimeters or % for percentages
*/
export type Unit = AnnotationTerm<PropertyAnnotationValue<Edm.String>>;

// Term
/**
  The minimum granularity of duration values.
*/
export type DurationGranularity = AnnotationTerm<PropertyAnnotationValue<DurationGranularityType>>;

// Typedefinition
export type DurationGranularityType = Edm.String;
export const enum MeasuresAnnotationTerms {
	ISOCurrency = "Org.OData.Measures.V1.ISOCurrency",
	Scale = "Org.OData.Measures.V1.Scale",
	Unit = "Org.OData.Measures.V1.Unit",
	DurationGranularity = "Org.OData.Measures.V1.DurationGranularity"
}
export const enum MeasuresAnnotationTypes {}
