"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorators_1 = require("../../../common/decoration/decorators");
const application_1 = require("../../application");
class Table {
}
__decorate([
    decorators_1.syncRule({
        manifest: {
            path: (entitySet) => application_1.getTableSettingsPathForLR(entitySet)
        }
    }),
    decorators_1.validity({
        since: '1.74.0'
    })
], Table.prototype, "type", void 0);
__decorate([
    decorators_1.syncRule({
        manifest: {
            path: (entitySet) => application_1.getTableSettingsPathForLR(entitySet),
            import: (tableSettings) => {
                const value = tableSettings['creationMode'];
                if (typeof value === 'object') {
                    return value;
                }
                else if (typeof value === 'string') {
                    return {
                        name: value
                    };
                }
            }
        }
    }),
    decorators_1.validity({
        since: '1.74.0'
    })
], Table.prototype, "creationMode", void 0);
__decorate([
    decorators_1.syncRule({
        manifest: {
            path: (entitySet) => application_1.getTableSettingsPathForLR(entitySet),
            import: (tableSettings) => {
                const value = tableSettings['personalization'];
                if (typeof value === 'object') {
                    return value;
                }
                else if (typeof value === 'boolean') {
                    return {
                        column: value,
                        sort: value,
                        filter: value
                    };
                }
            }
        }
    }),
    decorators_1.validity({
        since: '1.74.0'
    })
], Table.prototype, "personalization", void 0);
__decorate([
    decorators_1.syncRule({
        manifest: {
            path: (entitySet) => application_1.getTableSettingsPathForLR(entitySet)
        }
    }),
    decorators_1.validity({
        since: '1.74.0'
    })
], Table.prototype, "selectionMode", void 0);
__decorate([
    decorators_1.syncRule({
        manifest: {
            path: (entitySet) => application_1.getSettingsPathForPage(entitySet)
        }
    }),
    decorators_1.validity({
        since: '1.74.0'
    })
], Table.prototype, "variantManagement", void 0);
__decorate([
    decorators_1.syncRule({
        manifest: {
            path: (entitySet) => application_1.getSettingsPathForPage(entitySet)
        }
    }),
    decorators_1.validity({
        since: '1.74.0'
    })
], Table.prototype, "initialLoad", void 0);
exports.Table = Table;
//# sourceMappingURL=Table.js.map