"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decoration_1 = require("../common/decoration");
const v2_1 = require("../../specification/v2");
exports.getAppSettingPathV2 = (pageKeys) => {
    return 'sap.ui.generic.app/pages/' + pageKeys[0] + '/component/settings';
};
exports.getTableSettingPathV2 = (pageKeys) => {
    const path = exports.getAppSettingPathV2(pageKeys);
    return path + '/tableSettings';
};
exports.getDataLoadSettingPathV2 = (pageKeys) => {
    const path = exports.getAppSettingPathV2(pageKeys);
    return path + '/dataLoadSettings';
};
exports.getOVPsettingPath = () => {
    return 'sap.ovp';
};
exports.getCardSettingsPath = (cardKey) => {
    const pathParts = ['sap.ovp' + '/cards'];
    cardKey.forEach((block) => {
        if (block in v2_1.CardSettingsType) {
            pathParts.push('settings');
        }
        else {
            pathParts.push(block);
        }
    });
    pathParts.pop();
    return pathParts.join('/');
};
// This corresponds to List Report and Object page global settings
exports.getAppRootSettingOBJPath = (pageKeys) => {
    const pathParts = ['sap.ui.generic.app'];
    pageKeys.forEach((pageKey) => {
        pathParts.push('pages/' + pageKey);
    });
    return pathParts.join('/');
};
// This corresponds to global object page settings
exports.getAppSettingOBJPathV2 = (pageKeys) => {
    const pathParts = [];
    pathParts.push(exports.getAppRootSettingOBJPath(pageKeys));
    pathParts.push('component/settings');
    return pathParts.join('/');
};
exports.getAppSettingOBJsectionPathV2 = (pageKeys, sectionId) => {
    const pathParts = [];
    pathParts.push(exports.getAppRootSettingOBJPath(pageKeys));
    const manifestSectionId = sectionId.replace('::@com.sap.vocabularies', '::com.sap.vocabularies');
    pathParts.push('component/settings/sections/' + manifestSectionId);
    return pathParts.join('/');
};
exports.getTableSettingsOBJsectionPathV2 = (pageKeys, sectionId) => {
    const path = exports.getAppSettingOBJsectionPathV2(pageKeys, sectionId);
    return path + '/tableSettings';
};
exports.getChartSettingsOBJsectionPathV2 = (pageKeys, sectionId) => {
    const path = exports.getAppSettingOBJsectionPathV2(pageKeys, sectionId);
    return path + '/chartSettings';
};
exports.getViewExtensionsPath = () => {
    return `sap.ui5/extends/extensions/${v2_1.SAPUI5_VIEW_EXTENSION}/${v2_1.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE}`;
};
exports.getObjectPageCustomSectionPath = (pageName, sectionId, ...pathParts) => {
    const separator = '|';
    const sectionIdParts = sectionId.split(separator);
    const pageNameParts = pageName[pageName.length - 1].split(separator);
    let idLastPart = '';
    if (sectionIdParts.length === 4) {
        // Four parts ==> the last one is incremented to avoid getting the same path
        // We need to merge 3 and 4
        idLastPart = [sectionIdParts[2], sectionIdParts[3]].join(separator);
    }
    else if (sectionIdParts.length === 3) {
        idLastPart = sectionIdParts[2];
    }
    const customSectionId = [sectionIdParts[0], pageNameParts[pageNameParts.length - 1], idLastPart].join(separator);
    // Sub-path parts are passed
    pathParts.unshift(customSectionId);
    return exports.getViewExtensionsPath() + '/' + pathParts.join('/');
};
class ApplicationV2 {
}
__decorate([
    decoration_1.childId('settings')
], ApplicationV2.prototype, "settings", void 0);
exports.ApplicationV2 = ApplicationV2;
class AppSettings {
}
__decorate([
    decoration_1.syncRule({
        manifest: {
            path: () => 'sap.app'
        }
    })
], AppSettings.prototype, "title", void 0);
__decorate([
    decoration_1.syncRule({
        manifest: {
            path: () => 'sap.app'
        }
    })
], AppSettings.prototype, "description", void 0);
__decorate([
    decoration_1.syncRule({
        manifest: {
            path: () => 'sap.ui.generic.app/settings'
        }
    }),
    decoration_1.validity({
        since: '1.50.0'
    })
], AppSettings.prototype, "flexibleColumnLayout", void 0);
__decorate([
    decoration_1.syncRule({
        manifest: {
            path: () => 'sap.ui.generic.app/settings'
        }
    }),
    decoration_1.validity({
        since: '1.46.0'
    })
], AppSettings.prototype, "forceGlobalRefresh", void 0);
__decorate([
    decoration_1.syncRule({
        manifest: {
            path: () => 'sap.ui.generic.app/settings'
        }
    }),
    decoration_1.validity({
        since: '1.74.0'
    })
], AppSettings.prototype, "tableColumnVerticalAlignment", void 0);
exports.AppSettings = AppSettings;
//# sourceMappingURL=application.js.map