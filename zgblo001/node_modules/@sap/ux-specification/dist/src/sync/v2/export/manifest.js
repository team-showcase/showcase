"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("../../../specification/common");
exports.getManifestSectionByPathV2 = (manifest, path) => {
    let manifestSection = manifest;
    path.split('/').forEach(function (element) {
        if (!manifestSection[element]) {
            manifestSection[element] = {};
        }
        manifestSection = manifestSection && manifestSection[element];
    });
    return manifestSection ? manifestSection : {};
};
function getNewPageTemplate(pageType) {
    const pageTemplate = {
        component: {
            name: 'sap.suite.ui.generic.template.' + pageType
        }
    };
    return pageTemplate;
}
function transformPageToNewManifestV2(pageId, pages, v2Page) {
    const page = pages[pageId];
    if (!page) {
        return;
    }
    if (page.entitySet) {
        v2Page['entitySet'] = page.entitySet;
    }
    if (page.pageType === common_1.PageType.ListReport) {
        v2Page['component']['list'] = true;
    }
    if (page.navigationProperty) {
        v2Page['navigationProperty'] = page.navigationProperty;
    }
    if (page.defaultLayoutType) {
        v2Page['defaultLayoutType'] = page.defaultLayoutType;
    }
    else if ('defaultLayoutType' in v2Page) {
        delete v2Page['defaultLayoutType'];
    }
    if (page.navigation) {
        for (const association in page.navigation) {
            //Handling partial deletion of a page
            if (!pages[association]) {
                continue;
            }
            if (v2Page['pages'] && !Object.values(v2Page['pages'])[0]) {
                v2Page['pages'][`${pages[association].pageType}|${pages[association].entitySet}`] = getNewPageTemplate(pages[association].pageType);
            }
            if (!v2Page['pages']) {
                v2Page['pages'] = {
                    [`${pages[association].pageType}|${pages[association].entitySet}`]: getNewPageTemplate(pages[association].pageType)
                };
            }
            if (!v2Page['pages'][`${pages[association].pageType}|${pages[association].entitySet}`]) {
                v2Page['pages'][`${pages[association].pageType}|${pages[association].entitySet}`] = getNewPageTemplate(pages[association].pageType);
            }
            transformPageToNewManifestV2(association, pages, v2Page['pages'][`${pages[association].pageType}|${pages[association].entitySet}`]);
        }
        // Delete page
        if (v2Page['pages']) {
            Object.keys(v2Page['pages']).forEach((key) => {
                if (v2Page['pages'][key].navigationProperty &&
                    !pages[`ObjectPage_${v2Page['pages'][key]['entitySet']}_${v2Page['pages'][key]['navigationProperty']}`]) {
                    delete v2Page['pages'][key];
                }
            });
        }
        if (page.pageType === common_1.PageType.ListReport && Object.keys(page.navigation).length === 0) {
            delete v2Page['pages'];
        }
    }
}
exports.transformPageToNewManifestV2 = transformPageToNewManifestV2;
//# sourceMappingURL=manifest.js.map