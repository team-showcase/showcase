"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decoration_1 = require("../../../common/decoration");
const decorators_1 = require("../../../common/decoration/decorators");
const types_1 = require("../../../common/types");
const getSmartChartControlId = (baseId) => {
    return baseId + 'chart';
};
class ChartSettings {
}
__decorate([
    decorators_1.syncRule({
        flex: {
            controlId: getSmartChartControlId,
            controlType: () => types_1.ControlType.SmartChart,
            exportFunction: decoration_1.exportToFlexChange
        }
    })
], ChartSettings.prototype, "showLegendButton", void 0);
__decorate([
    decorators_1.syncRule({
        flex: {
            controlId: getSmartChartControlId,
            controlType: () => types_1.ControlType.SmartChart,
            exportFunction: decoration_1.exportToFlexChange
        }
    })
], ChartSettings.prototype, "showDownloadButton", void 0);
__decorate([
    decorators_1.syncRule({
        flex: {
            controlId: getSmartChartControlId,
            controlType: () => types_1.ControlType.SmartChart,
            exportFunction: decoration_1.exportToFlexChange
        }
    })
], ChartSettings.prototype, "showChartTypeSelectionButton", void 0);
__decorate([
    decorators_1.syncRule({
        flex: {
            controlId: getSmartChartControlId,
            controlType: () => types_1.ControlType.SmartChart,
            exportFunction: decoration_1.exportToFlexChange
        }
    })
], ChartSettings.prototype, "ignoredChartTypes", void 0);
exports.ChartSettings = ChartSettings;
//# sourceMappingURL=AnalyticalListPageChart.js.map