import { SchemaType } from './specification/schemaAccess';
import { FioriElementsVersion } from './specification/common/page';
import { Page as PageV2 } from './specification/v2/page';
import { Page as PageV4 } from './specification/v4/page';
import { AnnotationData, File, ExportResults, ServiceMetadata } from './sync/common/types';
import { ApplicationV2, ObjectPageConfig as ObjectPageConfigV2, ListReportConfig as ListReportConfigV2, OverviewPageConfig as OverviewPageConfigV2, AnalyticalListPageConfig as AnalyticalListPageConfigV2, Manifest as ManifestV2 } from './v2';
import { ApplicationV4, ObjectPageConfig as ObjectPageConfigV4, ListReportConfig as ListReportConfigV4, Manifest as ManifestV4 } from './v4';
/**
 * Types for V2 schema generation
 */
export declare type GenerateListReportV2 = {
    [SchemaType.ListReport]: {
        genericSchema: object;
        entitySet: string;
        annotations: AnnotationData[];
    };
};
export declare type GenerateObjectPageV2 = {
    [SchemaType.ObjectPage]: {
        genericSchema: object;
        entitySet: string;
        annotations: AnnotationData[];
        manifest: object;
        service: ServiceMetadata;
    };
};
export declare type GenerateOverviewPageV2 = {
    [SchemaType.OverviewPage]: {
        genericSchema: object;
    };
};
export declare type GenerateAnalyticalListPageV2 = {
    [SchemaType.AnalyticalListPage]: {
        genericSchema: object;
        entitySet: string;
        annotations: object[];
    };
};
export interface GenerateSchemaV2 {
    [FioriElementsVersion.v2]: GenerateListReportV2 | GenerateObjectPageV2 | GenerateOverviewPageV2 | GenerateAnalyticalListPageV2;
}
/**
 * Types for V4 schema generation
 */
export declare type GenerateListReportV4 = {
    [SchemaType.ListReport]: {
        genericSchema: object;
    };
};
export declare type GenerateObjectPageV4 = {
    [SchemaType.ObjectPage]: {
        genericSchema: object;
        entitySet: string;
        annotations: AnnotationData[];
        manifest: object;
    };
};
export declare type GenerateAnalyticalListPageV4 = {
    [SchemaType.AnalyticalListPage]: {
        genericSchema: object;
    };
};
export interface GenerateSchemaV4 {
    [FioriElementsVersion.v4]: GenerateListReportV4 | GenerateObjectPageV4 | GenerateAnalyticalListPageV4;
}
/**
 * Union types for schema generation
 */
export declare type GenerateSchemaParameters = GenerateSchemaV2 | GenerateSchemaV4;
/**
 * Types for v2 export
 */
export declare type ExportListReportV2 = {
    [SchemaType.ListReport]: {
        appId: string;
        page: PageV2;
        manifest: object;
        jsonSchema: object;
    };
};
export declare type ExportOverviewPageV2 = {
    [SchemaType.OverviewPage]: {
        page: PageV2;
        manifest: object;
        jsonSchema: object;
    };
};
export declare type ExportObjectPageV2 = {
    [SchemaType.ObjectPage]: {
        appId: string;
        page: PageV2;
        manifest: object;
        jsonSchema: object;
    };
};
export declare type ExportAppV2 = {
    [SchemaType.Application]: {
        application: ApplicationV2;
        manifest: object;
        jsonSchema: object;
    };
};
export declare type ExportAnalyticalListPageV2 = {
    [SchemaType.AnalyticalListPage]: {
        appId: string;
        page: PageV2;
        manifest: object;
        jsonSchema: object;
    };
};
/**
 * Types for v4 export
 */
export declare type ExportListReportV4 = {
    [SchemaType.ListReport]: {
        appId: string;
        page: PageV4;
        manifest: object;
        jsonSchema: object;
    };
};
export declare type ExportObjectPageV4 = {
    [SchemaType.ObjectPage]: {
        appId: string;
        page: PageV4;
        manifest: object;
        jsonSchema: object;
    };
};
export declare type ExportAppV4 = {
    [SchemaType.Application]: {
        application: ApplicationV4;
        manifest: object;
        jsonSchema: object;
    };
};
export declare type ExportAnalyticalListPageV4 = {
    [SchemaType.AnalyticalListPage]: {
        appId: string;
        page: PageV4;
        manifest: object;
        jsonSchema: object;
    };
};
export interface ExportParametersV4 {
    [FioriElementsVersion.v4]: ExportListReportV4 | ExportObjectPageV4 | ExportAppV4 | ExportAnalyticalListPageV4;
}
export interface UI5Version {
    ui5Version?: string;
}
export interface ExportParametersV2 {
    [FioriElementsVersion.v2]: ExportListReportV2 | ExportObjectPageV2 | ExportOverviewPageV2 | ExportAppV2 | ExportAnalyticalListPageV2;
}
/**
 * Union types for export
 */
export declare type ExportConfigParameters = UI5Version & (ExportParametersV2 | ExportParametersV4);
/**
 * Types for v2 import
 */
export declare type ImportListReportV2 = {
    [SchemaType.ListReport]: {
        manifest: object;
        flex: string[];
        jsonSchema: object;
    };
};
export declare type ImportObjectPageV2 = {
    [SchemaType.ObjectPage]: {
        manifest: object;
        flex: string[];
        jsonSchema: object;
        entitySet: string;
    };
};
export declare type ImportOverviewPageV2 = {
    [SchemaType.OverviewPage]: {
        manifest: object;
        jsonSchema: object;
    };
};
export declare type ImportAnalyticalListPageV2 = {
    [SchemaType.AnalyticalListPage]: {
        manifest: object;
        flex: string[];
        jsonSchema: object;
    };
};
/**
 * Types for v4 import
 */
export declare type ImportListReportV4 = {
    [SchemaType.ListReport]: {
        manifest: object;
        jsonSchema: object;
    };
};
export declare type ImportObjectPageV4 = {
    [SchemaType.ObjectPage]: {
        manifest: object;
        jsonSchema: object;
        routingId: string;
    };
};
export declare type ImportAnalyticalListPageV4 = {
    [SchemaType.AnalyticalListPage]: {
        manifest: object;
        jsonSchema: object;
    };
};
export interface ImportParametersV4 {
    [FioriElementsVersion.v4]: ImportListReportV4 | ImportObjectPageV4 | ImportAnalyticalListPageV4;
}
export interface ImportParametersV2 {
    [FioriElementsVersion.v2]: ImportListReportV2 | ImportObjectPageV2 | ImportOverviewPageV2 | ImportAnalyticalListPageV2;
}
export declare type ImportResultsV2 = ListReportConfigV2 | ObjectPageConfigV2 | OverviewPageConfigV2 | AnalyticalListPageConfigV2;
export declare type ImportResultsV4 = ListReportConfigV4 | ObjectPageConfigV4;
export declare type ImportConfigParameters = ImportParametersV2 | ImportParametersV4;
export declare type ImportResults = ImportResultsV2 | ImportResultsV4;
/**
 * Types for project import
 */
export interface ImportProjectParameters {
    manifest: ManifestV2 | ManifestV4;
    annotations: AnnotationData[];
    flex?: string[];
}
/**
 * API Version
 */
export interface ApiVersion {
    version: string;
}
/**
 * API interface
 */
export interface Specification {
    getGenericSchema: (FioriElementsVersion: any, SchemaType: any) => Promise<JSON>;
    generateSchema: (GenerateSchemaParameters: any) => object;
    exportConfig: (ExportConfigParameters: any) => ExportResults;
    importConfig: (ImportConfigParameters: any) => ImportResults;
    importProject: (ImportProjectParameters: any) => Promise<File[]>;
    getApiVersion: () => ApiVersion;
    importProjectSchema: (ImportProjectParameters: any) => Promise<File[]>;
}
