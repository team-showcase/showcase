module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1006);
/******/ })
/************************************************************************/
/******/ ({

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),

/***/ 1006:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const yeoman_generator_1 = __importDefault(__webpack_require__(127));
const utils_1 = __webpack_require__(128);
const manifest_1 = __webpack_require__(301);
class ErrorMessages {
}
ErrorMessages.noManifest = 'Error: could not read webapp/manifest.json';
module.exports = class extends yeoman_generator_1.default {
    constructor(args, opts) {
        super(args, opts);
        this.configExists = false;
        this.abort = false;
        this.opts = this._sanitize(opts);
    }
    _sanitize(opts) {
        const sanitized = Object.assign({}, opts);
        if (typeof sanitized.manifest !== 'object')
            delete sanitized.manifest;
        if (typeof sanitized.root !== 'string')
            delete sanitized.root;
        if (typeof sanitized.object !== 'string')
            delete sanitized.object;
        if (typeof sanitized.action !== 'string')
            delete sanitized.action;
        if (typeof sanitized.subtitle !== 'string')
            delete sanitized.subtitle;
        return sanitized;
    }
    _init() {
        this._initManifest();
        ({ name: this.existingInboundName, inbound: this.existingInbound } = this.opts.manifest.inbound);
        this.configExists = !!this.existingInbound;
    }
    _initManifest() {
        if (this.opts.manifest)
            return;
        try {
            this.opts.manifest = new manifest_1.Manifest(this.destinationPath('webapp'));
        }
        catch (_a) {
            utils_1.bail({ env: this.env, errorMessage: ErrorMessages.noManifest });
        }
    }
    async prompting() {
        var _a, _b, _c, _d;
        this._init();
        this.answers = Object.assign({}, this.opts);
        // Overwrite if config exists?
        if (this.configExists && !this.answers.overwrite) {
            ({ overwrite: this.answers.overwrite } = await this.prompt([
                {
                    type: 'confirm',
                    name: 'overwrite',
                    message: 'FLP configuration exists. Overwrite',
                    default: false
                }
            ]));
            if (!this.answers.overwrite) {
                this.abort = true;
                return;
            }
        }
        Object.assign(this.answers, await this.prompt([
            {
                name: 'object',
                type: 'text',
                when: !this.answers.object,
                default: (_a = this.existingInbound) === null || _a === void 0 ? void 0 : _a.semanticObject,
                message: 'Semantic Object',
                filter: (val) => { var _a; return (_a = val) === null || _a === void 0 ? void 0 : _a.trim(); },
                validate: (val) => { var _a; return ((_a = val) === null || _a === void 0 ? void 0 : _a.trim().length) === 0 ? 'Semantic Object is required' : true; }
            },
            {
                name: 'action',
                type: 'text',
                when: !this.answers.action,
                default: (_b = this.existingInbound) === null || _b === void 0 ? void 0 : _b.action,
                message: 'Action',
                filter: (val) => { var _a; return (_a = val) === null || _a === void 0 ? void 0 : _a.trim(); },
                validate: (val) => { var _a; return ((_a = val) === null || _a === void 0 ? void 0 : _a.trim().length) === 0 ? 'Action is required' : true; }
            },
            {
                name: 'title',
                type: 'text',
                when: !this.answers.title,
                default: (_c = this.existingInbound) === null || _c === void 0 ? void 0 : _c.title,
                message: 'Title',
                filter: (val) => { var _a; return (_a = val) === null || _a === void 0 ? void 0 : _a.trim(); },
                validate: (val) => { var _a; return (((_a = val) === null || _a === void 0 ? void 0 : _a.trim().length) === 0 ? 'Title is required' : true); }
            },
            {
                name: 'subtitle',
                type: 'text',
                when: !this.answers.subtitle,
                default: (_d = this.existingInbound) === null || _d === void 0 ? void 0 : _d.subTitle,
                message: 'Subtitle (optional)',
                filter: (val) => { var _a; return (_a = val) === null || _a === void 0 ? void 0 : _a.trim(); }
            }
        ]));
    }
    writing() {
        var _a, _b;
        if (this.abort)
            return;
        const inboundName = (_a = this.existingInboundName, (_a !== null && _a !== void 0 ? _a : `${this.answers.manifest.appId.replace(/\./g, '-')}-inbound`));
        const inbound = {
            inbounds: {
                [inboundName]: {
                    signature: {
                        parameters: {},
                        additionalParameters: 'allowed'
                    },
                    semanticObject: this.answers.object,
                    action: this.answers.action,
                    title: this.answers.title,
                    subTitle: (_b = this.answers.subtitle, (_b !== null && _b !== void 0 ? _b : '')),
                    icon: ''
                }
            }
        };
        this.opts.manifest.crossNavigation = inbound;
        this.opts.manifest.write();
    }
};


/***/ }),

/***/ 127:
/***/ (function(module, exports) {

module.exports = require("yeoman-generator");

/***/ }),

/***/ 128:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 *
 * @param namespacedAppName Name of the app, like `sap.ux.app`
 * @returns Name that's acceptable in an mta.yaml
 */
Object.defineProperty(exports, "__esModule", { value: true });
function toMtaModuleName(appId) {
    return appId.replace(/[`~!@#$%^&*()_|+\-=?;:'",.<>]/gi, '');
}
exports.toMtaModuleName = toMtaModuleName;
/**
 * Bail with `errorMessage`
 *
 * Sets process.exitCode to `1` by calling env.error()
 *
 */
function bail({ env, errorMessage }) {
    env.error(new Error(errorMessage));
}
exports.bail = bail;
/**
 * Enumeration of environment variables used in AppStudio
 */
var CF_ENV;
(function (CF_ENV) {
    CF_ENV["H2O_URL"] = "H2O_URL";
})(CF_ENV = exports.CF_ENV || (exports.CF_ENV = {}));
/**
 * Check if we're running in App Studio
 */
function isAppStudio() {
    return !!process.env[CF_ENV.H2O_URL];
}
exports.isAppStudio = isAppStudio;


/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),

/***/ 301:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __webpack_require__(2);
const path = __importStar(__webpack_require__(1));
const fs = __importStar(__webpack_require__(2));
exports.crossNavigationPath = ['sap.app', 'crossNavigation'];
exports.idPath = ['sap.app', 'id'];
class Manifest {
    constructor(dir) {
        this.CONFIG_FILE = 'manifest.json';
        this.manifestPath = dir;
        this.contents = JSON.parse(fs_1.readFileSync(this.manifestPath).toString());
    }
    set manifestPath(appDir) {
        this._appPath = path.join(appDir, this.CONFIG_FILE);
    }
    get manifestPath() {
        return this._appPath;
    }
    get appId() {
        var _a, _b;
        return (_b = (_a = this.contents) === null || _a === void 0 ? void 0 : _a['sap.app']) === null || _b === void 0 ? void 0 : _b.id;
    }
    get applicationVersion() {
        var _a, _b;
        return (_b = (_a = this.contents['sap.app']) === null || _a === void 0 ? void 0 : _a.applicationVersion) === null || _b === void 0 ? void 0 : _b.version;
    }
    get inbound() {
        var _a, _b, _c;
        const inbounds = (_a = this.contents['sap.app'].crossNavigation) === null || _a === void 0 ? void 0 : _a.inbounds;
        return inbounds ? { name: (_b = Object.keys(inbounds)) === null || _b === void 0 ? void 0 : _b[0], inbound: (_c = Object.values(inbounds)) === null || _c === void 0 ? void 0 : _c[0] } : {};
    }
    set crossNavigation(c) {
        this.contents['sap.app'].crossNavigation = c;
    }
    write() {
        fs.writeFileSync(this.manifestPath, JSON.stringify(this.contents, null, 4));
    }
}
exports.Manifest = Manifest;


/***/ })

/******/ });